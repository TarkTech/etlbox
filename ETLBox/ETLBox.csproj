<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <Configurations>Debug;Release</Configurations>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Description>A lightweight ETL (extract, transform, load) library and data integration toolbox for .NET. Source and destination components let you read and write data from the most common databases and file types. Transformations allow you to you harmonize, filter, aggregate, validate and clean your data.</Description>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <Copyright>Andreas Lennartz</Copyright>
        <PackageLicenseFile>license.txt</PackageLicenseFile>
        <PackageProjectUrl>https://www.etlbox.net</PackageProjectUrl>
        <RepositoryUrl>https://github.com/roadrunnerlenny/etlbox</RepositoryUrl>
        <PackageTags>ETL .NET dataflow ssis database integration data transform</PackageTags>
        <PackageReleaseNotes>Version 2.3.0 introduces the Network class. With Network.Execute(params DataFlowComponent[]) you can now start your whole network synchronously, without having to call separate Wait() for each destination. Network.ExecuteAsync(..) will give you a task for the whole network that can be awaited. This version introduces full support for Db2. The Lookup and DbMerge now have a partial cache for databases. Partial cache will only load data into the memory that is needed for current data processing. New transformation: Dinstinct to filter out duplicate records. Odbc and OleDb support was improved to also support DbMerge operations.</PackageReleaseNotes>
        <Version>2.3.0</Version>
        <PackageIcon>logo_bw.png</PackageIcon>
        <Authors>Andreas Lennartz</Authors>
        <Company>ETLBox Office</Company>
        <RootNamespace>ETLBox</RootNamespace>
        <Product>ETLBox</Product>
        <PackageId>ETLBox</PackageId>
        <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DebugType>none</DebugType>
        <DebugSymbols>false</DebugSymbols>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
        <PackageReference Include="NLog.Extensions.Logging" Version="1.6.5" />
        <PackageReference Include="System.Data.Common" Version="4.3.0" />
        <PackageReference Include="System.Threading.Tasks.Dataflow" Version="5.0.0" />
        <PackageReference Include="TSQL.Parser" Version="1.5.2" />
    </ItemGroup>

    <ItemGroup>
        <None Include="img\logo_bw.png" Pack="true" PackagePath="">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Include="license.txt">
          <Pack>True</Pack>
          <PackagePath></PackagePath>
        </None>
    </ItemGroup>

    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
        <ItemGroup>
            <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
        </ItemGroup>
    </Target>

</Project>
